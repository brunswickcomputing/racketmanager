name: CI

on:
  push:
    branches: [ "main", "master", "develop", "feature/**" ]
  pull_request:
    branches: [ "main", "master", "develop" ]

permissions:
  contents: read
  security-events: write # for SARIF upload

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  qodana-php:
    name: Qodana PHP (Static Analysis)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Qodana PHP
        uses: JetBrains/qodana-action@v2024.3
        with:
          linter: jetbrains/qodana-php:2024.3
          pr-mode: true
          args: |
            --project-dir=.
            --results-dir=qodana-results-php
          
      - name: Upload Qodana PHP Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: qodana-php-report
          path: qodana-results-php

      - name: Upload SARIF to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: qodana-results-php/qodana.sarif.json

  qodana-js:
    name: Qodana JS (ESLint-backed)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Qodana JS
        uses: JetBrains/qodana-action@v2024.3
        with:
          linter: jetbrains/qodana-js:2024.3
          pr-mode: true
          args: |
            --project-dir=.
            --results-dir=qodana-results-js
            --save-report

      - name: Upload Qodana JS Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: qodana-js-report
          path: qodana-results-js

      - name: Upload JS SARIF to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: qodana-results-js/qodana.sarif.json

  phpcs:
    name: PHPCS (WordPress Standards)
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          tools: composer

      - name: Install PHPCS and WPCS
        env:
          COMPOSER_NO_INTERACTION: 1
        run: |
          composer global config allow-plugins.dealerdirect/phpcodesniffer-composer-installer true
          composer global require "squizlabs/php_codesniffer:^3.10" "wp-coding-standards/wpcs:^3.0" "phpcsutils/phpcsutils:^1.0" "phpcompatibility/php-compatibility:^10.0"
          PHPCS_HOME=$(composer global config home 2>/dev/null || echo "$HOME/.composer")
          "$PHPCS_HOME"/vendor/bin/phpcs --config-set installed_paths "$PHPCS_HOME"/vendor/wp-coding-standards/wpcs,\
          "$PHPCS_HOME"/vendor/phpcompatibility/php-compatibility
          # Show installed standards after configuration
          "$PHPCS_HOME"/vendor/bin/phpcs -i

      - name: Run PHPCS (non-blocking; auto-detect path)
        run: |
          PHPCS_HOME=$(composer global config home 2>/dev/null || echo "$HOME/.composer")
          if [ -f "wp-content/plugins/racketmanager/phpcs.xml" ]; then
            "$PHPCS_HOME"/vendor/bin/phpcs -q --report=full --standard=wp-content/plugins/racketmanager/phpcs.xml wp-content/plugins/racketmanager
          elif [ -f "phpcs.xml" ]; then
            "$PHPCS_HOME"/vendor/bin/phpcs -q --report=full --standard=phpcs.xml .
          else
            echo "PHPCS ruleset not found; skipping."
          fi

  composer-smoke:
    name: Composer Autoload Smoke Test (Plugin)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          tools: composer

      - name: Install Composer deps (optimize)
        run: |
          set -euo pipefail
          if [ -f "racketmanager.php" ]; then
            PLUGIN_DIR="."
          elif [ -f "wp-content/plugins/racketmanager/racketmanager.php" ]; then
            PLUGIN_DIR="wp-content/plugins/racketmanager"
          else
            echo "Could not locate plugin root (racketmanager.php)."
            pwd; ls -la
            exit 1
          fi
          composer install --no-dev --prefer-dist -o --working-dir="$PLUGIN_DIR"

      - name: Bootstrap plugin and instantiate core class
        run: |
          set -euo pipefail
          if [ -f "racketmanager.php" ]; then
            PLUGIN_DIR="."
          elif [ -f "wp-content/plugins/racketmanager/racketmanager.php" ]; then
            PLUGIN_DIR="wp-content/plugins/racketmanager"
          else
            echo "Could not locate plugin root (racketmanager.php)."
            pwd; ls -la
            exit 1
          fi
          php -r "chdir(getenv('PLUGIN_DIR') ?: '$PLUGIN_DIR'); require 'racketmanager.php'; \\Racketmanager\\RacketManager::get_instance(); if (!class_exists('Racketmanager\\\\Player')) { throw new Exception('Player class missing'); } if (!method_exists('Racketmanager\\\\Player','get_instance')) { throw new Exception('Player::get_instance missing'); } if (!class_exists('Racketmanager\\\\Club')) { throw new Exception('Club class missing'); } if (!method_exists('Racketmanager\\\\Club','get_instance')) { throw new Exception('Club::get_instance missing'); } echo 'OK';"
